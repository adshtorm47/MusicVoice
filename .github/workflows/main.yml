name: Build MusicVoice APK
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (empty repo is ok)
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Install Android SDK (cmdline-tools)
        run: |
          sudo mkdir -p /usr/local/android-sdk
          export ANDROID_SDK_ROOT=/usr/local/android-sdk
          echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
          cd /usr/local/android-sdk
          sudo curl -sSL https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -o cmdtools.zip
          sudo unzip -q cmdtools.zip -d cmdline-tools
          sudo mkdir -p cmdline-tools/latest
          sudo mv cmdline-tools/cmdline-tools/* cmdline-tools/latest/
          export PATH="$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$ANDROID_SDK_ROOT/platform-tools:$PATH"
          yes | sdkmanager --licenses
          sdkmanager "platform-tools" "platforms;android-34" "build-tools;34.0.0"

      - name: Generate Gradle wrapper
        run: |
          curl -s "https://get.sdkman.io" | bash
          source "$HOME/.sdkman/bin/sdkman-init.sh"
          sdk install gradle 8.7
          gradle wrapper --gradle-version 8.7
          chmod +x ./gradlew

      - name: Scaffold minimal Android app
        run: |
          set -e
          mkdir -p app/src/main/java/com/example/musicvoice
          mkdir -p app/src/main/res/layout
          mkdir -p gradle/wrapper

          cat > settings.gradle.kts <<'EOF'
          pluginManagement {
              repositories { google(); mavenCentral() }
              plugins {
                  id("com.android.application") version "8.5.2"
                  id("org.jetbrains.kotlin.android") version "1.9.24"
              }
          }
          dependencyResolutionManagement {
              repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
              repositories { google(); mavenCentral() }
          }
          rootProject.name = "MusicVoice"
          include(":app")
          EOF

          cat > build.gradle.kts <<'EOF'
          plugins {
              id("com.android.application") apply false
              id("org.jetbrains.kotlin.android") apply false
          }
          EOF

          cat > gradle.properties <<'EOF'
          org.gradle.jvmargs=-Xmx2048m -Dfile.encoding=UTF-8
          android.useAndroidX=true
          android.nonTransitiveRClass=true
          kotlin.code.style=official
          EOF

          cat > app/build.gradle.kts <<'EOF'
          plugins {
              id("com.android.application")
              id("org.jetbrains.kotlin.android")
          }
          android {
              namespace = "com.example.musicvoice"
              compileSdk = 34
              defaultConfig {
                  applicationId = "com.example.musicvoice"
                  minSdk = 26
                  targetSdk = 34
                  versionCode = 1
                  versionName = "0.1"
              }
              buildTypes {
                  release {
                      isMinifyEnabled = false
                      proguardFiles(getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro")
                  }
              }
              compileOptions {
                  sourceCompatibility = JavaVersion.VERSION_17
                  targetCompatibility = JavaVersion.VERSION_17
              }
              kotlinOptions { jvmTarget = "17" }
          }
          dependencies {
              implementation("androidx.core:core-ktx:1.13.1")
              implementation("androidx.appcompat:appcompat:1.7.0")
              implementation("com.google.android.material:material:1.12.0")
          }
          EOF

          cat > app/proguard-rules.pro <<'EOF'
          # empty
          EOF

          cat > app/src/main/AndroidManifest.xml <<'EOF'
          <manifest xmlns:android="http://schemas.android.com/apk/res/android">
            <application
              android:allowBackup="true"
              android:label="MusicVoice"
              android:supportsRtl="true"
              android:theme="@style/Theme.Material3.DayNight.NoActionBar">
              <activity android:name=".MainActivity">
                <intent-filter>
                  <action android:name="android.intent.action.MAIN"/>
                  <category android:name="android.intent.category.LAUNCHER"/>
                </intent-filter>
              </activity>
            </application>
          </manifest>
          EOF

          cat > app/src/main/res/layout/activity_main.xml <<'EOF'
          <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
              android:orientation="vertical"
              android:padding="24dp"
              android:layout_width="match_parent"
              android:layout_height="match_parent">
              <TextView
                  android:text="MusicVoice готов к запуску"
                  android:textSize="22sp"
                  android:layout_width="wrap_content"
                  android:layout_height="wrap_content"/>
              <TextView
                  android:paddingTop="12dp"
                  android:text="После установки добавим запись голоса и эффекты."
                  android:layout_width="wrap_content"
                  android:layout_height="wrap_content"/>
          </LinearLayout>
          EOF

          cat > app/src/main/java/com/example/musicvoice/MainActivity.kt <<'EOF'
          package com.example.musicvoice
          import android.os.Bundle
          import androidx.appcompat.app.AppCompatActivity
          class MainActivity : AppCompatActivity() {
              override fun onCreate(savedInstanceState: Bundle?) {
                  super.onCreate(savedInstanceState)
                  setContentView(R.layout.activity_main)
              }
          }
          EOF

      - name: Build debug APK
        env:
          ANDROID_SDK_ROOT: ${{ env.ANDROID_SDK_ROOT }}
        run: ./gradlew assembleDebug --stacktrace

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: MusicVoice-debug-apk
          path: app/build/outputs/apk/debug/*.apk
